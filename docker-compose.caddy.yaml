version: '3.8'

services:
  caddy:
    image: caddy:2
    container_name: caddy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    environment:
      - CADDY_ADMIN=0.0.0.0:2019  # Enable admin API
    networks:
      - web

  # Caddy Manager Backend API server
  caddymanager-backend:
    image: caddymanager/caddymanager-backend:latest
    container_name: caddymanager-backend
    restart: unless-stopped
    environment:
      - PORT=3000
      - DB_ENGINE=sqlite
      - SQLITE_DB_PATH=/app/data/caddymanager.sqlite
      - CORS_ORIGIN=https://caddy.app.trailcommandpro.com
      - LOG_LEVEL=debug
      - CADDY_SANDBOX_URL=http://caddy:2019
      - PING_INTERVAL=30000
      - PING_TIMEOUT=2000
      - AUDIT_LOG_MAX_SIZE_MB=100
      - AUDIT_LOG_RETENTION_DAYS=90
      - METRICS_HISTORY_MAX=1000
      - JWT_SECRET=your_jwt_secret_key_change_for_production
      - JWT_EXPIRATION=24h
    volumes:
      - caddymanager_sqlite:/app/data
    networks:
      - web

  # Caddy Manager Frontend web UI
  caddymanager-frontend:
    image: caddymanager/caddymanager-frontend:latest
    container_name: caddymanager-frontend
    restart: unless-stopped
    depends_on:
      - caddymanager-backend
    environment:
      - BACKEND_HOST=caddymanager-backend:3000
      - APP_NAME=Caddy Manager
      - DARK_MODE=true
    networks:
      - web

  trailcommand-web:
    build:
      context: .
      dockerfile: Dockerfile
    image: trailcommand/web:latest
    container_name: trailcommand-web
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - PORT=3000
      - HOST=0.0.0.0
    networks:
      - web

volumes:
  caddy_data:
  caddy_config:
  caddymanager_sqlite:

networks:
  web:
    driver: bridge